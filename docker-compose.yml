version: "3.8"
services:
  db:
    image: postgis/postgis:latest
    ports:
      - "5432"
    expose:
      - "5432"
    environment:
      POSTGRES_DB: banmarchive
      POSTGRES_USER: banmarchive
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    environment:
      DJANGO_SETTINGS_MODULE: banmarchive.settings.dev
      ALLOWED_HOSTS: 127.0.0.1,0.0.0.0,localhost
      SECRET_KEY: local_dev_secret_key
      DATABASE_URL: postgres://banmarchive:postgres@db:5432/banmarchive
      STATIC_URL: /static/
      STATIC_DIR: /app/static/
      MEDIA_DIR: /app/media/
      SECURE_SSL_REDIRECT: "false"
      RECAPTCHA_PUBLIC_KEY: UPDATE_THIS
      RECAPTCHA_PRIVATE_KEY: UPDATE_THIS
      PYTHONUNBUFFERED: 1
      PYTHONBREAKPOINT: pudb.set_trace
      stdin_open: "true"
      tty: "true"
    build:
      context: .
      args:
        BUILD_ENV: "${BUILD_ENV:-dev}"
      dockerfile: ./Dockerfile
    links:
      - db:db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command:
      - poetry
      - run
      - python
      - manage.py
      - runserver
      - 0.0.0.0:8000
    volumes:
      - .:/app
